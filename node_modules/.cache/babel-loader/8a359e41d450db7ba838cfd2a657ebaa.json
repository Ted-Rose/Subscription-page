{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Tedis\\\\Local_documents\\\\GitHub\\\\Study\\\\CSS\\\\css-in-react\\\\src\\\\EmailForm.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport \"./EmailForm.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst EmailForm = () => {\n  _s();\n\n  const [message, setMessage] = React.useState(\"\");\n  const [input, setInput] = React.useState(\"\");\n  const [inputHasError, setInputHasError] = React.useState(true);\n\n  const inputChangeHandler = event => {\n    setInput(event.target.value);\n  };\n\n  const emailValidation = () => {\n    const emailRegex = /^(([^<>()[\\]\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@(([^<>()[\\]\\.,;:\\s@\\\"]+\\.)+[^<>()[\\]\\.,;:\\s@\\\"]{2,})$/i;\n    return !(!input || emailRegex.test(input) === false);\n  };\n\n  const countryValidation = () => {\n    const countryRegex = /.co$/;\n    return !input || countryRegex.test(input) === false;\n  };\n\n  const onSubmit = () => {\n    const isEmailValid = emailValidation();\n    const countryValid = countryValidation();\n\n    if (Object.keys(input).length === 0) {\n      setInputHasError(true);\n      setMessage(\"Email adress is required!\");\n    } else if (!countryValid) {\n      setInputHasError(true);\n      setMessage(\"We are not accepting subscriptions from Colombia emails!\");\n    } else if (!isEmailValid) {\n      setInputHasError(true);\n      setMessage(\"Email Address not valid!\");\n    } else {\n      setInputHasError(false);\n      setMessage(\"Thanks for subscribing!\");\n    }\n  };\n\n  const preventDefault = e => {\n    e.preventDefault();\n  };\n\n  const messageClass = inputHasError ? \"error-message\" : \"approved-message\";\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"formBox\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      id: \"submitButton\",\n      type: \"image\",\n      className: \"submitButton\",\n      alt: \"Submit\",\n      src: \"./Images/ic_arrow.png\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: messageClass,\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n\n_s(EmailForm, \"YyhCNmrMbKIY/Bua3y6T8+yGjtY=\");\n\n_c = EmailForm;\nexport default EmailForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"EmailForm\");","map":{"version":3,"names":["React","EmailForm","message","setMessage","useState","input","setInput","inputHasError","setInputHasError","inputChangeHandler","event","target","value","emailValidation","emailRegex","test","countryValidation","countryRegex","onSubmit","isEmailValid","countryValid","Object","keys","length","preventDefault","e","messageClass"],"sources":["C:/Users/Tedis/Local_documents/GitHub/Study/CSS/css-in-react/src/EmailForm.js"],"sourcesContent":["import React from \"react\";\r\n\r\nimport \"./EmailForm.scss\";\r\n\r\nconst EmailForm = () => {\r\n  const [message, setMessage] = React.useState(\"\");\r\n  const [input, setInput] = React.useState(\"\");\r\n  const [inputHasError, setInputHasError] = React.useState(true);\r\n\r\n  const inputChangeHandler = (event) => {\r\n    setInput(event.target.value);\r\n  };\r\n\r\n  const emailValidation = () => {\r\n    const emailRegex =\r\n      /^(([^<>()[\\]\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@(([^<>()[\\]\\.,;:\\s@\\\"]+\\.)+[^<>()[\\]\\.,;:\\s@\\\"]{2,})$/i;\r\n    return !(!input || emailRegex.test(input) === false);\r\n  };\r\n\r\n  const countryValidation = () => {\r\n    const countryRegex = /.co$/;\r\n    return !input || countryRegex.test(input) === false;\r\n  };\r\n\r\n  const onSubmit = () => {\r\n    const isEmailValid = emailValidation();\r\n    const countryValid = countryValidation();\r\n\r\n    if (Object.keys(input).length === 0) {\r\n      setInputHasError(true);\r\n      setMessage(\"Email adress is required!\");\r\n    } else if (!countryValid) {\r\n      setInputHasError(true);\r\n      setMessage(\"We are not accepting subscriptions from Colombia emails!\");\r\n    } else if (!isEmailValid) {\r\n      setInputHasError(true);\r\n      setMessage(\"Email Address not valid!\");\r\n    } else {\r\n      setInputHasError(false);\r\n      setMessage(\"Thanks for subscribing!\");\r\n    }\r\n  };\r\n\r\n  const preventDefault = (e) => {\r\n    e.preventDefault();\r\n  };\r\n\r\n  const messageClass = inputHasError ? \"error-message\" : \"approved-message\";\r\n\r\n  return (\r\n    <div className=\"formBox\">\r\n\r\n        <input\r\n          id=\"submitButton\"\r\n          type=\"image\"\r\n          className=\"submitButton\"\r\n          alt=\"Submit\"\r\n          src=\"./Images/ic_arrow.png\"\r\n        ></input>\r\n        {/* <button className=\"submitButton\" onClick={onSubmit}></button> */}\r\n    \r\n      <div className={messageClass}>{message}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EmailForm;\r\n"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAO,kBAAP;;;AAEA,MAAMC,SAAS,GAAG,MAAM;EAAA;;EACtB,MAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBH,KAAK,CAACI,QAAN,CAAe,EAAf,CAA9B;EACA,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBN,KAAK,CAACI,QAAN,CAAe,EAAf,CAA1B;EACA,MAAM,CAACG,aAAD,EAAgBC,gBAAhB,IAAoCR,KAAK,CAACI,QAAN,CAAe,IAAf,CAA1C;;EAEA,MAAMK,kBAAkB,GAAIC,KAAD,IAAW;IACpCJ,QAAQ,CAACI,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAR;EACD,CAFD;;EAIA,MAAMC,eAAe,GAAG,MAAM;IAC5B,MAAMC,UAAU,GACd,sHADF;IAEA,OAAO,EAAE,CAACT,KAAD,IAAUS,UAAU,CAACC,IAAX,CAAgBV,KAAhB,MAA2B,KAAvC,CAAP;EACD,CAJD;;EAMA,MAAMW,iBAAiB,GAAG,MAAM;IAC9B,MAAMC,YAAY,GAAG,MAArB;IACA,OAAO,CAACZ,KAAD,IAAUY,YAAY,CAACF,IAAb,CAAkBV,KAAlB,MAA6B,KAA9C;EACD,CAHD;;EAKA,MAAMa,QAAQ,GAAG,MAAM;IACrB,MAAMC,YAAY,GAAGN,eAAe,EAApC;IACA,MAAMO,YAAY,GAAGJ,iBAAiB,EAAtC;;IAEA,IAAIK,MAAM,CAACC,IAAP,CAAYjB,KAAZ,EAAmBkB,MAAnB,KAA8B,CAAlC,EAAqC;MACnCf,gBAAgB,CAAC,IAAD,CAAhB;MACAL,UAAU,CAAC,2BAAD,CAAV;IACD,CAHD,MAGO,IAAI,CAACiB,YAAL,EAAmB;MACxBZ,gBAAgB,CAAC,IAAD,CAAhB;MACAL,UAAU,CAAC,0DAAD,CAAV;IACD,CAHM,MAGA,IAAI,CAACgB,YAAL,EAAmB;MACxBX,gBAAgB,CAAC,IAAD,CAAhB;MACAL,UAAU,CAAC,0BAAD,CAAV;IACD,CAHM,MAGA;MACLK,gBAAgB,CAAC,KAAD,CAAhB;MACAL,UAAU,CAAC,yBAAD,CAAV;IACD;EACF,CAjBD;;EAmBA,MAAMqB,cAAc,GAAIC,CAAD,IAAO;IAC5BA,CAAC,CAACD,cAAF;EACD,CAFD;;EAIA,MAAME,YAAY,GAAGnB,aAAa,GAAG,eAAH,GAAqB,kBAAvD;EAEA,oBACE;IAAK,SAAS,EAAC,SAAf;IAAA,wBAEI;MACE,EAAE,EAAC,cADL;MAEE,IAAI,EAAC,OAFP;MAGE,SAAS,EAAC,cAHZ;MAIE,GAAG,EAAC,QAJN;MAKE,GAAG,EAAC;IALN;MAAA;MAAA;MAAA;IAAA,QAFJ,eAWE;MAAK,SAAS,EAAEmB,YAAhB;MAAA,UAA+BxB;IAA/B;MAAA;MAAA;MAAA;IAAA,QAXF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAeD,CA5DD;;GAAMD,S;;KAAAA,S;AA8DN,eAAeA,SAAf"},"metadata":{},"sourceType":"module"}